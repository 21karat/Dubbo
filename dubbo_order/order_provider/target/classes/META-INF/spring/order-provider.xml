<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://code.alibabatech.com/schema/dubbo
        http://code.alibabatech.com/schema/dubbo/dubbo.xsd" default-autowire="byName">
       
	<context:annotation-config/><!-- 是用于激活那些已经在spring容器里注册过的bean（无论是通过xml的方式还是通过package sanning的方式）上面的注解。  -->
    <context:component-scan base-package="com.karat.cn.order_provider"/><!--除了具有<context:annotation-config>的功能之外，<context:component-scan>还可以在指定的package下扫描以及注册javabean 。  -->
    <!--当前项目在整个分布式架构里面的唯一名称，计算依赖关系的标签-->
    <dubbo:application name="order-provider" owner="provider"/>

	<!--监控中心配置  -->
    <dubbo:monitor protocol="registry"/>

    <!--dubbo这个服务所要暴露的服务地址所对应的注册中心--><!-- N/A:代表没有使用注册中心 -->
    <dubbo:registry id="zkOne" 
    protocol="zookeeper" 
    address="47.107.121.215:2181"/>

	
	<dubbo:registry id="zkTwo" 
	protocol="zookeeper" 
	address="47.107.121.215:2181" 
	register="false" timeout="2000"/>
		<dubbo:method name="" timeout="2000"></dubbo:method>
	<dubbo:registry subscribe="false"/>


    <!--当前服务发布所依赖的协议；webserovice、Thrift、Hessain、http-->
    <dubbo:protocol name="dubbo" port="20880"/>

	<!--增加 hessian协议 -->
	<dubbo:protocol name="hessian" port="8090" server="jetty"></dubbo:protocol>


    <!--服务发布的配置，需要暴露的服务接口--><!--protocol="hessian,dubbo"  -->
    <dubbo:service interface="com.karat.cn.order_api.IOrderService"
            ref="orderService" 
            protocol="hessian" 
            registry="zkOne" 
            version="1.0"/>
	<!--服务发布的配置，需要暴露的服务接口-->
    <dubbo:service interface="com.karat.cn.order_api.IOrderQueryService"
            ref="orderQueryService" 
            protocol="dubbo" 
            version="2.0"
            />

	<!--服务发布的配置，需要暴露的服务接口-->
    <dubbo:service interface="com.karat.cn.order_api.IOrderService2"
            ref="orderService2" 
            protocol="dubbo" 
            registry="zkOne" 
            version="2.0"
            async="true"			
            loadbalance="randon"
            cluster="failfast"/>

    <!--接口的实现  Bean bean定义--><!--@Service注解代替下面代码-->
    <!-- <bean id="orderService" 
    		class="com.karat.cn.order_provider.OrderServiceImpl"/>
    		
    <bean id="orderQueryService" 
    		class="com.karat.cn.order_provider.IOrderQueryServiceImpl"/> -->

</beans>